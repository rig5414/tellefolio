// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id                 String        @id @default(uuid())
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  title              String
  tagline            String?       // Optional short tagline
  problemStatement   String?       @db.Text // Long text for the problem
  role               String?
  processDescription String?       @db.Text
  solutionOutcome    String?       @db.Text
  videoUrl           String?
  keyLearnings       String?       @db.Text
  projectStatus      String?       // e.g., "Completed", "In Progress"
  dateRange          String?       // e.g., "Oct 2024 - April 2025"
  displayOrder       Int?          @default(0) // For custom ordering on the site
  isFeatured         Boolean       @default(false) // To highlight top projects

  images             ProjectImage[]
  links              ProjectLink[]
  technologies       Technology[]

  githubRepoUrl     String?       // Store the GitHub repository URL
  githubRepoId      String?       // Store GitHub's repository ID
  githubLastSync    DateTime?     // Track last sync with GitHub
  productionUrl     String?       // The live/production URL for AI analysis
  autoAnalyzed      Boolean       @default(false) // Flag if content was AI-analyzed
  mainImageId       String?       @unique // The chosen main image for the project
  mainImage         ProjectImage? @relation("MainImage", fields: [mainImageId], references: [id])
}

model ProjectImage {
  id        String   @id @default(uuid())
  url       String
  altText   String?
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  mainOf    Project? @relation("MainImage")
}

model ProjectLink {
  id        String   @id @default(uuid())
  url       String
  text      String   // e.g., "Live Site", "GitHub Repo"
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
}

model Technology {
  id        String    @id @default(uuid())
  name      String    @unique
  projects  Project[]
}